{
    "openapi": "3.0.0",
    "info": {
        "title": "Expenses API",
        "description": "API to manage expenses",
        "version": "1.0.0"
    },
    "paths": {
        "/api/expenses": {
            "get": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Get all expenses",
                "description": "Retrieve a list of all expenses",
                "operationId": "9b702aa9314d471a9de3a121e5183c88",
                "responses": {
                    "200": {
                        "description": "List of expenses"
                    },
                    "404": {
                        "description": "No expense found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Create a new expense",
                "description": "Create a new expense with provided name, description and price ",
                "operationId": "a764a04e6d047ab02a68f06c706e67f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price",
                                    "user_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "expenditure created"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/expenses/{id}": {
            "put": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Update a expense",
                "description": "Update the details of a expense",
                "operationId": "3132183b49b899f6dbc8e4c25b880461",
                "parameters": [
                    {
                        "name": "expense",
                        "in": "path",
                        "description": "ID of the expense to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "expense updated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "expense not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Delete a expense",
                "description": "Delete a expense by its ID",
                "operationId": "68ebff62f3bfb2213565253975db2c52",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the expense to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "expense deleted"
                    },
                    "404": {
                        "description": "expense not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "sanctum": []
        }
    ]
}